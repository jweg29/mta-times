// schema.prisma
generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

model Stop {
    id                  Int            @id @default(autoincrement())
    gtfsStopId          String         @unique
    name                String
    lat                 String
    lon                 String
    northDirectionLabel String
    southDirectionLabel String
    ada                 String
    adaNotes            String
    locationType        String
    parentStation       String
    routes              Route[]        @relation("StopRoutes")
    entrances           StopEntrance[] // This represents a one-to-many relationship with Entrance
}

model Route {
    id               Int     @id @default(autoincrement())
    gtfsRouteId      String
    agencyId         String
    shortName        String
    longName         String
    type             String
    routeDescription String
    url              String
    color            String
    textColor        String
    liveFeedURL      String
    shouldDisplay    Boolean @default(true)
    groupOrder       Int     @default(0)
    stops            Stop[]  @relation("StopRoutes")
}

model StopEntrance {
    id           Int     @id @default(autoincrement())
    lat          String
    lon          String
    type         String
    entryAllowed Boolean
    exitAllowed  Boolean
    gtfsStopId   String
    stop         Stop?   @relation(fields: [stopId], references: [id])
    stopId       Int?
}

model GTFSTrip {
    trip_id       String @id
    route_id      String
    service_id    String
    trip_headsign String
    direction_id  String
    shape_id      String

    // id           Int    @id @default(autoincrement())
    // gtfsTripId   String
    // routeId      String
    // serviceId    String
    // tripHeadsign String
    // directionId  String
    // shapeId      String
}
